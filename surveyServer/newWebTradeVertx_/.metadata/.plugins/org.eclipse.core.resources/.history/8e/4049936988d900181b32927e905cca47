package com.survey.internal.action;

import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;

import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;

import com.survey.dbservice.dao.CashDepositDao;
import com.survey.utils.FieldName;
import com.survey.utils.MessageDefault;
import com.survey.utils.RSAEncrypt;

//Only create and store payments
//Store payment and get deposit ID
public class DepositAction extends BaseSurveyInternalAction {
	@Override
	public void doProccess() {
		CashDepositDao lvCashDepositDao = new CashDepositDao();
		String userid = getMessageBody().getString(FieldName.USERID);
		String privateToken;
		try {
			privateToken = RSAEncrypt.getIntance().encrypt(userid);
		
		lvCashDepositDao.storeNewDepositRequest(getMessageBody().getString(FieldName.USERNAME), privateToken, "",
				getMessageBody().getDouble(FieldName.AMOUNT), getMessageBody().getString(FieldName.CCY),
				getMessageBody().getString(FieldName.REMARK), false).setHandler(handler -> {
					if (handler.succeeded()) {
						String id = handler.result();
					} else {
						this.response.complete(MessageDefault.RequestFailed(handler.cause().getMessage()));
					}
				});
		} catch (InvalidKeyException | NoSuchAlgorithmException | NoSuchPaddingException | IllegalBlockSizeException
				| BadPaddingException | UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
