package com.survey.utils;

import com.survey.dbservice.dao.UtilsDao;

import io.vertx.core.Future;
import io.vertx.core.json.JsonObject;

public class Utils {
	public static void putNotNull(final JsonObject data, String key, Object value) {
		if (value != null) {
			data.put(key, value);
		}
	}

	public static boolean checkWithdraw(int amount, double balance) {
		if (amount < balance) {
			return true;
		}
		return false;
	}

	public static Future<String> autoApprovelCashWithdraw(String paymentmethod, double amount) {
		Future<String> future = Future.future();
		try {
			
			UtilsDao lvDao = new UtilsDao();
			lvDao.retrieveCashMethodDetail(paymentmethod).setHandler(handler -> {
				if (handler.succeeded()) {
					JsonObject cash = handler.result();
					if(cash.getDouble(FieldName.AUTOAPPROVALWITHDRAWMAXAMOUNT)!=null) {
						if(amount > cash.getDouble(FieldName.AUTOAPPROVALWITHDRAWMAXAMOUNT)) {
							future.fail("Max approval withdraw error");
						}else {
							future.complete("Approval");
						}
					}else {
						future.fail("Null");
					}
				} else {

				}
			});
		} catch (Exception e) {
			future.fail(e.getMessage());
		}

		return future;
	}
}
