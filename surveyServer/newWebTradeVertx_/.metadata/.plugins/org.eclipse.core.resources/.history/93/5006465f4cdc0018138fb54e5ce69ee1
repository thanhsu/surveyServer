package com.survey.internal.action;

import com.survey.constant.EventBusDiscoveryConst;
import com.survey.dbservice.dao.SurveyDao;
import com.survey.utils.FieldName;
import com.survey.utils.MessageDefault;
import com.survey.utils.VertxServiceCenter;

import io.vertx.core.Future;
import io.vertx.core.json.JsonObject;

public class PushlishSurveyAction extends InternalSurveyBaseAction {

	@Override
	public void doProccess() {
		String surveyID = getMessageBody().getString(FieldName.SURVEYID);
		String userID = getMessageBody().getString(FieldName.USERID);
		String username = getMessageBody().getString(FieldName.USERNAME);

		double limitResp = getMessageBody().getDouble(FieldName.LIMITRESPONSE);
		float pointPerOne = getMessageBody().getFloat(FieldName.PAYOUT);

		float initialFund = getMessageBody().getFloat(FieldName.INITIALFUND);
		boolean notifi = getMessageBody().getBoolean(FieldName.NOTIFY);
		float limitFund = getMessageBody().getFloat(FieldName.LIMITFUND);
		SurveyDao lvSurveyDao = new SurveyDao();
		// Check account balance
		Future<JsonObject> lvAccountBalance = Future.future();
		VertxServiceCenter.getInstance().sendNewMessage(EventBusDiscoveryConst.ETHEREUMPROXYDISCOVERY.name(),
				getMessageBody(), lvAccountBalance);
		lvAccountBalance.setHandler(handler -> {
			if (handler.succeeded() && handler.result() != null) {
				// Check account balance
				JsonObject accountbalance = handler.result();
				if (accountbalance.getValue("success").toString().equals("true")) {
					float balance = Float.parseFloat(accountbalance.getString("balance"));
				} else {
					response.complete(MessageDefault.PermissionError());
				}

			} else {
				response.complete(MessageDefault.RequestFailed("Cannot check account balance now!"));
			}
		});

	}

}
